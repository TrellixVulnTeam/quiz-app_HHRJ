{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\quiz-app\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Helmet } from 'react-helmet';\nimport isEmpty from \"../../utils/is-empty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = \"https://opentdb.com/api.php?amount=100\";\n\nconst Quiz = () => {\n  _s();\n\n  var _questions$index, _questions$index2;\n\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [numberOfQuestions, setNumberOfQuestions] = useState(0);\n  const [numberOfAnsweredQuestion, setNumberOfAnsweredQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [wrongAnswers, setWrongAnswers] = useState(0);\n  const [isUseFiftyFifty, setIsUseFiftyFifty] = useState(false);\n  const [gameTime, setGameTime] = useState();\n  const hints = 5;\n  const fifyFifty = 2;\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => {\n      const questions = data.results.map(question => ({ ...question,\n        answers: [question.correct_answer, ...question.incorrect_answers].sort(() => Math.random() - 0.5)\n      }));\n      console.log('questions:', questions);\n      setQuestions(questions);\n    });\n  }, []);\n\n  const handleCorrectAnswer = () => {};\n\n  const handleWrongAnswer = () => {};\n\n  const handleQuestions = event => {}; //  useEffect(()=>{\n  //     fetch(API_URL)\n  //     .then((res) => res.json())\n  //     .then((json) => {\n  //             questions: json.results.map((question)=>({\n  //                 ...question,\n  //                 answers:[question.correct_answer,...question.incorrect_answers].sort(()=> Math.random()*0.5)\n  //             }))\n  //         setQuestions(question)\n  //     })\n  //  },[]);\n  //  const handleAnswer = (answer) => {\n  //     if(!showAnswers){\n  //       if(answer === questions[currentIndex].correct_answer){\n  //         setScore(score+1);\n  //       }\n  //     }\n  //     setShowAnswers(true);\n  // }\n  // const handleNextQuestion = () => {\n  //     setCurrentIndex(currentIndex+1);\n  //     setShowAnswers(false);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: questions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Quiz Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lifeline-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-set-center mdi-24px lifeline-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lifeline\",\n                children: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 88\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lifeline\",\n                children: \"5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 98\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"left\",\n                style: {\n                  float: 'left'\n                },\n                children: \"1 of 15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"right\",\n                children: [\"2:15\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mdi mdi-clock-outline mdi-24px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 20\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), ((_questions$index = questions[index]) === null || _questions$index === void 0 ? void 0 : _questions$index.question) && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: (_questions$index2 = questions[index]) === null || _questions$index2 === void 0 ? void 0 : _questions$index2.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: handleQuestions,\n              className: \"options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: handleQuestions,\n              className: \"options\",\n              children: \"1998\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: handleQuestions,\n              className: \"options\",\n              children: \"1999\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: handleQuestions,\n              className: \"options\",\n              children: \"2000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Quit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Quiz, \"wv9nnCh+alhbS66+zcF4uTGofQ4=\");\n\n_c = Quiz;\nexport default Quiz; // class Quiz extends React.Component{\n//     componentDidMount(){\n//         fetch(API_URL)\n//         .then((res) => res.json())\n//         .then((json) => {\n//             this.setState({\n//                 questions: json.results.map((question)=>({\n//                     ...question,\n//                     answers:[question.correct_answer,...question.incorrect_answers].sort(()=> Math.random()*0.5)\n//                 }))\n//             });\n//         })\n//         const{questions, currentQuestion,nextQuestion,previousQuestion} = this.state;\n//         this.displayQuestions(questions,currentQuestion,nextQuestion,previousQuestion);\n//     }\n//     displayQuestions = (questions = this.state.questions, currentQuestion,nextQuestion,previousQuestion)=>{\n//         let {currentQuestionIndex} = this.state; \n//         console.log('outside if')\n//         if(!isEmpty(this.state.questions)){\n//             console.log('inside if ')\n//             questions = this.state.questions;\n//             currentQuestion = questions[currentQuestionIndex];\n//             nextQuestion = questions[currentQuestionIndex + 1];\n//             previousQuestion = questions[currentQuestionIndex -1];\n//             const answer = currentQuestion.answer;\n//             console.log('currentQuestion', currentQuestion);\n//             this.setState({\n//                 currentQuestion,\n//                 nextQuestion,\n//                 previousQuestion,\n//                 answer\n//             })\n//         }\n//     };\n//     render(){\n//         const {questions} = this.state;\n//         console.log(questions)\n//         return(\n//         );\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/Users/User/Desktop/quiz-app/src/components/quiz/Quiz.js"],"names":["React","useEffect","useState","Helmet","isEmpty","API_URL","Quiz","questions","setQuestions","index","setIndex","answers","setAnswers","numberOfQuestions","setNumberOfQuestions","numberOfAnsweredQuestion","setNumberOfAnsweredQuestion","score","setScore","correctAnswers","setCorrectAnswers","wrongAnswers","setWrongAnswers","isUseFiftyFifty","setIsUseFiftyFifty","gameTime","setGameTime","hints","fifyFifty","fetch","then","res","json","data","results","map","question","correct_answer","incorrect_answers","sort","Math","random","console","log","handleCorrectAnswer","handleWrongAnswer","handleQuestions","event","float"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Helmet} from 'react-helmet';\r\nimport isEmpty  from \"../../utils/is-empty\";\r\n\r\nconst API_URL = \"https://opentdb.com/api.php?amount=100\";\r\n\r\n\r\n\r\nconst Quiz = ()=>{\r\n\r\n const [questions, setQuestions] = useState([]);\r\n const [index, setIndex] = useState(0);\r\n const [answers, setAnswers] = useState([]);\r\n const [numberOfQuestions, setNumberOfQuestions] = useState(0);\r\n const [numberOfAnsweredQuestion, setNumberOfAnsweredQuestion] = useState(0);\r\n const [score, setScore] = useState(0);\r\n const [correctAnswers, setCorrectAnswers] = useState(0);\r\n const [wrongAnswers, setWrongAnswers] = useState(0);\r\n const [isUseFiftyFifty, setIsUseFiftyFifty] = useState(false);\r\n const [gameTime, setGameTime] = useState();\r\n \r\n const hints = 5;\r\n const fifyFifty = 2;\r\n\r\n useEffect(() =>{\r\n    fetch(API_URL)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const questions = data.results.map((question) => ({\r\n          ...question,\r\n          answers:[question.correct_answer, ...question.incorrect_answers].sort(() => Math.random() - 0.5)\r\n        }))\r\n        console.log('questions:',questions)\r\n        setQuestions(questions)\r\n      });\r\n  },[])\r\n\r\n\r\n  const handleCorrectAnswer = ()=>{\r\n\r\n  }\r\n\r\n  const handleWrongAnswer = ()=>{\r\n\r\n}\r\n\r\n  const handleQuestions = (event)=>{\r\n\r\n  }\r\n\r\n//  useEffect(()=>{\r\n//     fetch(API_URL)\r\n//     .then((res) => res.json())\r\n//     .then((json) => {\r\n\r\n//             questions: json.results.map((question)=>({\r\n//                 ...question,\r\n//                 answers:[question.correct_answer,...question.incorrect_answers].sort(()=> Math.random()*0.5)\r\n\r\n//             }))\r\n     \r\n//         setQuestions(question)\r\n//     })\r\n//  },[]);\r\n\r\n\r\n\r\n\r\n//  const handleAnswer = (answer) => {\r\n//     if(!showAnswers){\r\n//       if(answer === questions[currentIndex].correct_answer){\r\n//         setScore(score+1);\r\n//       }\r\n//     }\r\n//     setShowAnswers(true);\r\n// }\r\n\r\n// const handleNextQuestion = () => {\r\n//     setCurrentIndex(currentIndex+1);\r\n//     setShowAnswers(false);\r\n// }\r\n\r\n\r\nreturn(\r\n    <>\r\n    {\r\n        questions &&   \r\n        <>\r\n        <title>Quiz Page</title>\r\n        <div className=\"questions\">\r\n            <section>\r\n            <div className=\"lifeline-container\">\r\n                <p>\r\n                    <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span><span className=\"lifeline\">2</span>\r\n                </p>\r\n                <p>\r\n                    <span className=\"mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"></span><span className=\"lifeline\">5</span>\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <p>\r\n                    <span className=\"left\" style={{float: 'left'}}>1 of 15</span>\r\n                   <span className=\"right\">2:15<span className=\"mdi mdi-clock-outline mdi-24px\"></span></span>\r\n                </p>\r\n            </div>\r\n           {questions[index]?.question && <h5>{questions[index]?.question}</h5>}\r\n            <div className=\"options-container\">\r\n                <p onClick={handleQuestions} className=\"options\"></p>\r\n                <p onClick={handleQuestions} className=\"options\">1998</p>\r\n            </div>\r\n            <div className=\"options-container\">\r\n                <p onClick={handleQuestions} className=\"options\">1999</p>\r\n                <p onClick={handleQuestions} className=\"options\">2000</p>\r\n            </div>\r\n   \r\n            <div className=\"button-container\">\r\n                <button>Previous</button>\r\n                <button  >Next</button>\r\n                <button>Quit</button>\r\n            </div>\r\n            </section>\r\n        </div>\r\n        </>\r\n    }\r\n </>\r\n);\r\n};\r\n\r\nexport default Quiz\r\n\r\n\r\n\r\n// class Quiz extends React.Component{\r\n\r\n//     componentDidMount(){\r\n//         fetch(API_URL)\r\n//         .then((res) => res.json())\r\n//         .then((json) => {\r\n\r\n//             this.setState({\r\n//                 questions: json.results.map((question)=>({\r\n//                     ...question,\r\n//                     answers:[question.correct_answer,...question.incorrect_answers].sort(()=> Math.random()*0.5)\r\n\r\n//                 }))\r\n//             });\r\n//         })\r\n//         const{questions, currentQuestion,nextQuestion,previousQuestion} = this.state;\r\n     \r\n//         this.displayQuestions(questions,currentQuestion,nextQuestion,previousQuestion);\r\n\r\n//     }\r\n\r\n//     displayQuestions = (questions = this.state.questions, currentQuestion,nextQuestion,previousQuestion)=>{\r\n//         let {currentQuestionIndex} = this.state; \r\n//         console.log('outside if')\r\n//         if(!isEmpty(this.state.questions)){\r\n//             console.log('inside if ')\r\n//             questions = this.state.questions;\r\n//             currentQuestion = questions[currentQuestionIndex];\r\n//             nextQuestion = questions[currentQuestionIndex + 1];\r\n//             previousQuestion = questions[currentQuestionIndex -1];\r\n//             const answer = currentQuestion.answer;\r\n//             console.log('currentQuestion', currentQuestion);\r\n//             this.setState({\r\n//                 currentQuestion,\r\n//                 nextQuestion,\r\n//                 previousQuestion,\r\n//                 answer\r\n//             })\r\n//         }\r\n//     };\r\n\r\n\r\n//     render(){\r\n\r\n//         const {questions} = this.state;\r\n//         console.log(questions)\r\n    \r\n//         return(\r\n    \r\n           \r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}